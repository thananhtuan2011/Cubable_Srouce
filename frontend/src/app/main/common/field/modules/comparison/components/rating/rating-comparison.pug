include ../mixins/mixin.pug

.layout-row.layout-align-start-center.layout-gap-8.layout-wrap.flex
	ng-container(*ngTemplateOutlet='fieldPicker')

	+comparisonOperator

	ng-container(*ngIf='data?.compareType')
		ng-container([ngSwitch]='data.compareType')
			ng-container(*ngSwitchCase='COMPARISON_TYPE.STATIC')
				cub-dropdown.flex.miw-200(
					required,
					#dataDropdown,
					[displayErrorMode]='ERROR_MODE.Tooltip',
					[clearable]='false',
					[disableControl]=`
						error?.field
							|| ( excludeFields?.isDisable
								&& ( excludeFieldsLK?.[ field?.id ] ) )`,
					[formControl]='dataControl',
					[(valueControl)]='data.number',
					(valueControlChange)='onDataChange()')
					ng-container(*ngIf='field?.emoji')
						cub-dropdown-item(
							*ngFor='let i of [].constructor( 10 ); let idx = index;',
							[label]='( idx + 1 ) + " " + ( field.emoji | emoji )',
							[value]='idx + 1')
			ng-container(*ngSwitchCase='COMPARISON_TYPE.AUTO')
				+comparisonTypeAuto

	ng-container(*ngIf='comparisonRange.has( operator )')
		form.layout-row.layout-align-start-center.layout-gap-8.layout-wrap(
			[formGroup]='rangeForm')
			cub-dropdown.w-80(
				required,
				#startDataDropdown,
				[formControl]='rangeForm.controls.start',
				[placeholder]='"FIELD.COMPARISON.PLACEHOLDER.SELECT" | translate',
				[displayErrorMode]='ERROR_MODE.Tooltip',
				[disableControl]=`
					error?.field
							|| ( excludeFields?.isDisable
								&& ( excludeFieldsLK?.[ field?.id ] ) )`,
				[clearable]='false',
				[(valueControl)]='data.start',
				(valueControlChange)='onStartDataChange()',
				(blur)='onStartDropdownBlur()')
				cub-dropdown-item(
					*ngFor='let startItem of [].constructor( 10 ); let idx = index;',
					[label]='idx',
					[value]='idx',
					[disabled]='idx >= data.end')
			| -
			cub-dropdown.w-80(
				required,
				#endDataDropdown,
				displayErrorMode='tooltip',
				[formControl]='rangeForm.controls.end',
				[placeholder]='"FIELD.COMPARISON.PLACEHOLDER.SELECT" | translate',
				[displayErrorMode]='ERROR_MODE.Tooltip',
				[disableControl]=`
					error?.field
						|| ( excludeFields?.isDisable
							&& ( excludeFieldsLK?.[ field?.id ] ) )`,
				[clearable]='false',
				[(valueControl)]='data.end',
				(valueControlChange)='onEndDataChange()')
				cub-dropdown-item(
					*ngFor='let endItem of [].constructor( 10 ); let idx = index;',
					[label]='idx + 1',
					[value]='idx + 1',
					[disabled]='idx + 1 <= data.start')
				ng-container(
					cubFormFieldError,
					*ngIf='data.end < data.start')
					| {{ "FIELD.COMPARISON.ERROR.END_NOT_SMALLER_START" | translate }}

	ng-container(*ngIf='operatorHasComparisonType.has( operator )')
		+comparisonType
