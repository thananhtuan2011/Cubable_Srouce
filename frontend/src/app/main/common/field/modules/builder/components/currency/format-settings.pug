.layout-column.layout-gap-16
	cub-dropdown(
		searchable,
		[menuSize]='{ maxHeight: 244 }',
		[label]='"FIELD.BUILDER.LABEL.CURRENCY_UNIT" | translate',
		[(ngModel)]='currency',
		(ngModelChange)='currencyChange.emit( $event ); onChanges();')
		cub-dropdown-item(
			*ngFor='let currency of CURRENCIES; trackByProperty: "code"',
			[label]='currency.code + " - " + currency.name + " - " + currency.symbol',
			[value]='currency.symbol')
	cub-dropdown(
		[label]='"FIELD.BUILDER.LABEL.NUMBER_FORMAT" | translate',
		[(ngModel)]='format',
		(ngModelChange)='formatChange.emit( $event ); onChanges();')
		cub-dropdown-item(
			description='Ex: 1,000,000.25',
			[label]='"FIELD.BUILDER.LABEL.COMMAS_SEPARATOR" | translate',
			[value]='NumberFormat.CommasSeparator')
		cub-dropdown-item(
			description='Ex: 1000 = 1K',
			[label]='"FIELD.BUILDER.LABEL.THOUSAND_UNIT" | translate',
			[value]='NumberFormat.ThousandUnit')
	cub-dropdown(
		[menuSize]='{ maxHeight: 200 }',
		[label]='"FIELD.BUILDER.LABEL.DECIMAL_PLACES_FORMAT" | translate',
		[(ngModel)]='decimalPlaces',
		(ngModelChange)='decimalPlacesChange.emit( $event ); onChanges();')
		cub-dropdown-item(
			*ngFor='let i of [].constructor( 7 ); let index = index;',
			[label]='10 | numberValue : null : index',
			[value]='index')
